name: Django CI cho UserService

on:
  push:
    branches: [ "UserService" ]
    paths:
      - 'UserService/**'
  pull_request:
    branches: [ "UserService" ]
    paths:
      - 'UserService/**'

jobs:
  build:
    runs-on: ubuntu-latest
    

    strategy:
      max-parallel: 4
      matrix:
        # Khuyến khích dùng các bản Python ổn định
        python-version: [3.13] 

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Dependencies
      # Chỉ định thư mục làm việc cho bước này
      working-directory: ./UserService 
      run: |
        python -m pip install --upgrade pip
        # Vẫn cần mysqlclient để Django kết nối đến RDS
        pip install -r requirements.txt mysqlclient 

    - name: Run Tests
      # Chỉ định thư mục làm việc cho bước này
      working-directory: ./UserService 
      
      # SỬA ĐỔI: Cung cấp các biến env lấy từ GitHub Secrets
      # Django settings của bạn sẽ đọc các biến này để kết nối đến RDS
      env:
        # -- Cấu hình Database trỏ đến RDS --
        USER_SERVICE_DB_HOST: ${{ secrets.USER_SERVICE_DB_HOST }}
        USER_SERVICE_DB_PORT: ${{ secrets.USER_SERVICE_DB_PORT }}
        USER_SERVICE_DB_NAME: ${{ secrets.USER_SERVICE_DB_NAME }}
        USER_SERVICE_DB_USER: ${{ secrets.USER_SERVICE_DB_USER }} 
        USER_SERVICE_DB_PASSWORD: ${{ secrets.USER_SERVICE_DB_PASSWORD }}
        
        # -- Cấu hình Email --
        EMAIL_HOST_USER: ${{ secrets.EMAIL_HOST_USER }}
        EMAIL_HOST_PASSWORD: ${{ secrets.EMAIL_HOST_PASSWORD }}

        # Đảm bảo Django tìm thấy file settings (thay 'UserService.settings' nếu cần)
        DJANGO_SETTINGS_MODULE: UserService.settings 

      run: |
        # Lệnh này sẽ tạo một DATABASE TEST MỚI trên RDS 
        # (ví dụ: test_user_service)
        python manage.py migrate 
        
        # Chạy test trên database test đó
        python manage.py test